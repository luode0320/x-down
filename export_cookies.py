# 导入必要的模块
import browser_cookie3  # 用于从浏览器中提取 cookies
import tempfile  # 用于获取系统临时目录
import os  # 用于文件路径操作


# 定义导出 cookies 的函数
def export_cookies():
    try:
        # 首先尝试从 Chrome 浏览器获取 cookies
        # domain_name='.x.com' 指定只获取 x.com 相关的 cookies
        cookies = browser_cookie3.chrome(domain_name='.x.com')

        # 创建临时文件路径，用于保存 cookies
        cookies_file = os.path.join(os.getcwd(), 'x_cookies.txt')

        # 以写入模式打开文件，使用 UTF-8 编码
        with open(cookies_file, 'w', encoding='utf-8') as f:
            # 写入 Netscape 格式 cookies 文件的头部信息
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# https://curl.haxx.se/rfc/cookie_spec.html\n")
            f.write("# This file was generated by browser_cookie3\n\n")

            # 遍历所有获取到的 cookies
            for cookie in cookies:
                # 只处理与 .x.com 相关的 cookies
                if '.x.com' in cookie.domain:
                    # 根据 cookie 的 secure 属性设置是否安全
                    secure = "TRUE" if cookie.secure else "FALSE"
                    # 检查是否有 HttpOnly 属性
                    http_only = "TRUE" if cookie.has_nonstandard_attr('HttpOnly') else "FALSE"
                    # 设置一个未来的过期时间（2025-01-01 的 Unix 时间戳）
                    expires = "1735689600"  # 2025-01-01

                    # 按照 Netscape 格式写入 cookie 信息
                    # 格式：域名\t是否所有子域可用\t路径\t是否安全\t过期时间\t名称\t值
                    f.write(f"{cookie.domain}\tTRUE\t{cookie.path}\t{secure}\t{expires}\t{cookie.name}\t{cookie.value}\n")

        # 打印保存的文件路径
        print(f"Cookies saved to: {cookies_file}")
        return cookies_file  # 返回文件路径

    except Exception as e:
        # 如果 Chrome 获取失败，打印错误信息
        print(f"Error with Chrome: {e}")
        try:
            # 尝试从 Edge 浏览器获取 cookies
            cookies = browser_cookie3.edge(domain_name='.x.com')
            # 创建临时文件路径
            cookies_file = os.path.join(os.getcwd(), 'x_cookies.txt')

            # 以写入模式打开文件
            with open(cookies_file, 'w', encoding='utf-8') as f:
                # 写入 Netscape 格式头部信息
                f.write("# Netscape HTTP Cookie File\n")
                f.write("# https://curl.haxx.se/rfc/cookie_spec.html\n")
                f.write("# This file was generated by browser_cookie3\n\n")

                # 遍历所有 cookies
                for cookie in cookies:
                    # 只处理与 .x.com 相关的 cookies
                    if '.x.com' in cookie.domain:
                        # 设置 secure 和 HttpOnly 属性
                        secure = "TRUE" if cookie.secure else "FALSE"
                        http_only = "TRUE" if cookie.has_nonstandard_attr('HttpOnly') else "FALSE"
                        # 设置过期时间为 2025-01-01
                        expires = "1735689600"  # 2025-01-01

                        # 写入 Netscape 格式的 cookie 信息
                        f.write(f"{cookie.domain}\tTRUE\t{cookie.path}\t{secure}\t{expires}\t{cookie.name}\t{cookie.value}\n")

            # 打印保存路径
            print(f"Cookies saved to: {cookies_file}")
            return cookies_file  # 返回文件路径

        except Exception as e:
            # 如果 Edge 也失败，打印错误信息并返回 None
            print(f"Error with Edge: {e}")
            return None


# 如果直接运行该脚本，执行 export_cookies 函数
if __name__ == '__main__':
    export_cookies()