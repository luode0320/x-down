# 此文件相当简单
# 1. 检测到main分支有提交触发jobs任务
# 2. 指定一个github服务器的环境ubuntu-latest
# 3. 执行pull当前的代码到github服务器
# 4. 直接登录docker, 并制作镜像(所有安装依赖等都写在dockerfile中, 不在此执行)
# 5. 连接远程服务器, 停止/删除容器, 重新拉取最新镜像, 启动
name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  docker: # 描述词, 无实际意义
    runs-on: ubuntu-latest # 运行的环境
    # 步骤
    steps:
      - uses: actions/checkout@v3 # 相当于执行git pull操作，以获取最新的代码

      - name: 打包镜像, 上传 Docker Hub # 描述词, 无实际意义
        run: | # 当前服务器依次执行下面的命令
          docker login -u luode0320 --password ${{ secrets.REGISTRY_PASSWORD }}
          docker build -t luode0320/x-down:latest .
          docker push luode0320/x-down:latest
      - name: 登录服务器, 执行脚本 # 描述词, 无实际意义
        uses: appleboy/ssh-action@master # 通过SSH登录到远程服务器
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: root
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: 22
          script: | # 远程服务器依次执行下面的命令, 删除容器, 删除镜像, 拉取最新镜像, 启动容器 
            docker rm -f x-down
            docker rmi luode0320/x-down:latest
            docker run -d -p 7777:7777 --network host --restart=always -v /usr/local/src/x-down:/app --name x-down luode0320/x-down:latest

